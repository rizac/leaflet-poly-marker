/* (c) Riccardo Zaccarelli rizac@github.com */
L.PolyMarker=L.Polygon.extend({options:{marker:"s",radius:10},markers:{s:[45,4],d:[0,4],D:[0,4],p:[18,5],h:[30,6],H:[0,6],"^":[-30,3],v:[-90,3],"<":[60,3],">":[0,3],8:[22.5,8]},initialize:function(latlng,...options){if(options.length==2){var[marker,options]=options;options.marker=marker}else{options=options[0]}L.Util.setOptions(this,options);L.Polygon.prototype.initialize.call(this,[],options);if(Array.isArray(latlng)){latlng=L.latLng(latlng[0],latlng[1])}this._latlng=latlng},onRemove:function(){delete this._mapZoom;L.Polygon.prototype.onRemove.call(this)},getCenter:function(){return this._latlng},_project:function(){if(this._map&&this._map.getZoom()!==this._mapZoom){this._mapZoom=this._map.getZoom();this._setLatLngs(this.computeLatLngs(this._map))}L.Polygon.prototype._project.call(this)},computeLatLngs:function(map){var marker=this.options.marker;if(marker in this.markers){var[startAngle,numSides]=this.markers[marker]}else if(parseInt(marker)==marker){var[startAngle,numSides]=[0,parseInt(marker)]}else{return[]}var[PI,cos,sin,abs]=[Math.PI,Math.cos,Math.sin,Math.abs];startAngle=PI*startAngle/180;var stepAngle=2*PI/numSides;var angles=new Array(numSides).fill(0).map(((element,index)=>index*stepAngle+startAngle));var latLng=this._latlng;var center=map.latLngToLayerPoint(latLng);var radius=this.options.radius;var latlngs=angles.map((function(angle,index){var[x,y]=[radius*cos(angle),radius*sin(angle)];return map.layerPointToLatLng(new L.Point(center.x+x,center.y-y))}));if(marker=="d"){var w=abs(latlngs[0].lng-latlngs[2].lng)/4;latlngs[0].lng-=w;latlngs[2].lng+=w}return latlngs}});L.polyMarker=function(latlng,...options){return new L.PolyMarker(latlng,...options)};
